package com.reziena.user.reziena_1;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.graphics.Rect;import android.os.AsyncTask;import android.os.Bundle;import android.os.Handler;import android.support.v7.app.AppCompatActivity;import android.util.Log;import android.view.Display;import android.view.MotionEvent;import android.view.View;import android.view.WindowManager;import android.widget.ImageButton;import android.widget.ImageView;import android.widget.RelativeLayout;import android.widget.SeekBar;import android.widget.TextView;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.io.BufferedReader;import java.io.InputStream;import java.io.InputStreamReader;import java.io.OutputStream;import java.net.HttpURLConnection;import java.net.URL;import java.text.SimpleDateFormat;import java.util.Date;import java.util.Locale;import java.util.Random;public class MoistureActivity extends AppCompatActivity {    HomeActivity homeactivity = (HomeActivity)HomeActivity.homeactivity;    private FirebaseDatabase firebaseDatabase = FirebaseDatabase.getInstance();    private DatabaseReference databaseReference = firebaseDatabase.getReference();    ImageButton imageButton;    ImageView moisture_image;    TextView cancel, status, okay, again, moisture_status, result_grade, result_per;    RelativeLayout moisture_result;    SeekBar progress;    Handler mHandler = null;    String grade, per;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_moisture);        WindowManager.LayoutParams lpWindow = new WindowManager.LayoutParams();        lpWindow.flags = WindowManager.LayoutParams.FLAG_DIM_BEHIND;        lpWindow.dimAmount = 0.0f;        getWindow().setAttributes(lpWindow);        // popupt창 사이즈 지정        Display display = ((WindowManager) getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();        int width = (int)(display.getWidth() * 0.9); //Display 사이즈의 100%        int height = (int)(display.getHeight() * 0.9);        getWindow().getAttributes().width = width;        getWindow().getAttributes().height = height;        imageButton = findViewById(R.id.imageButton);        cancel = findViewById(R.id.cancel);        progress = findViewById(R.id.progress);        status = findViewById(R.id.status);        okay = findViewById(R.id.okay);        again = findViewById(R.id.again);        moisture_image = findViewById(R.id.moisture_image);        moisture_result = findViewById(R.id.moisture_result);        moisture_status = findViewById(R.id.moisture_status);        result_grade = findViewById(R.id.result_grade);        result_per = findViewById(R.id.result_per);        moisture_result.setVisibility(View.INVISIBLE);        okay.setVisibility(View.INVISIBLE);        again.setVisibility(View.INVISIBLE);        progress.setPadding(0,0,0,0);        // seekbar 터치 막기        progress.setOnTouchListener(new View.OnTouchListener() {            @Override            public boolean onTouch(View v, MotionEvent event) {                return true;            }        });        Random rand = new Random();        int r = rand.nextInt(6);        switch (r) {            case 0:                grade = "A+"; per = "100"; break;            case 1:                grade = "A"; per = "95"; break;            case 2:                grade = "B+"; per = "90"; break;            case 3:                grade = "B"; per = "85"; break;            case 4:                grade = "C+"; per = "80"; break;            case 5:                grade = "C"; per = "75";break;        }        setData task = new setData();        task.execute("http://"+HomeActivity.IP_Address+"/saveMoisture.php", per);        mHandler = new Handler();        Thread t = new Thread(new Runnable() {            int now=10;            @Override            public void run() {                // UI 작업 X                while (now < progress.getMax()) {                    now++;                    Log.i("NOW:  ", String.valueOf(now));                    try {                        //progress.getLayoutParams().width = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, now, getResources().getDisplayMetrics());                        //progress.requestLayout();                        if (now % 20 == 0) {                            Thread.sleep(1000);                        }                        progress.setProgress(now);                    } catch (Exception e) {                        e.printStackTrace();                    }                }                mHandler.post(new Runnable() {                    @Override                    public void run() {                        // UI 작업 O                        status.setText("Completed");                        cancel.setVisibility(View.INVISIBLE);                        okay.setVisibility(View.VISIBLE);                        moisture_image.setVisibility(View.INVISIBLE);                        result_grade.setText(grade);                        result_per.setText(per +" of moisture \n contained");                        moisture_result.setVisibility(View.VISIBLE);                        moisture_status.setText("Done! Good job.");                    }                });            }        });        t.start();        View.OnClickListener onClickListener = new View.OnClickListener() {            @Override            public void onClick(View v) {                switch (v.getId()) {                    case R.id.okay:                        homeactivity.dashback.setImageResource(0);                        finish();                        //Intent intent = new Intent(getApplicationContext(), HomeActivity.class);                        //startActivity(intent);                    case R.id.again:                        homeactivity.dashback.setImageResource(0);                        finish();                    case R.id.imageButton: case R.id.cancel:                        homeactivity.dashback.setImageResource(0);                        finish();                        break;                }            }        };        imageButton.setOnClickListener(onClickListener);        cancel.setOnClickListener(onClickListener);        okay.setOnClickListener(onClickListener);        again.setOnClickListener(onClickListener);    }    class setData extends AsyncTask<String, Void, String> {        @Override        protected String doInBackground(String... params) {            String serverURL = params[0];            String per = params[1];            SimpleDateFormat mSimpleDateFormat = new SimpleDateFormat ( "yyyy-MM-dd", Locale.KOREA );            Date currentTime = new Date();            String date = mSimpleDateFormat.format ( currentTime );            SharedPreferences sp_userID = getSharedPreferences("userID", MODE_PRIVATE);            String userID = sp_userID.getString("userID", "");            String postParameters = "date="+date+"&id="+userID+"&per="+per;            Log.e("moisture-postParameters", postParameters);            try {                URL url = new URL(serverURL);                HttpURLConnection httpURLConnection= (HttpURLConnection)url.openConnection();                httpURLConnection.setReadTimeout(5000);                httpURLConnection.setConnectTimeout(5000);;                httpURLConnection.setRequestMethod("POST");                httpURLConnection.connect();                OutputStream outputStream = httpURLConnection.getOutputStream();                outputStream.write(postParameters.getBytes("UTF-8"));                outputStream.flush();                outputStream.close();                // response                int responseStatusCode = httpURLConnection.getResponseCode();                String responseStatusMessage = httpURLConnection.getResponseMessage();                Log.e("response-moisture", "POST response Code - " + responseStatusCode);                Log.e("response-moisture", "POST response Message - "+ responseStatusMessage);            } catch (Exception e) {                Log.e("ERROR", "InsertDataError ", e);            }            return null;        }    }    public boolean dispatchTouchEvent(MotionEvent ev){        Rect dialogBounds = new Rect();        getWindow().getDecorView().getHitRect(dialogBounds);        if(!dialogBounds.contains((int)ev.getX(),(int) ev.getY())){            return false;        }        return super.dispatchTouchEvent(ev);    }    @Override    public void onBackPressed() {        super.onBackPressed();        homeactivity.dashback.setImageResource(0);    }}